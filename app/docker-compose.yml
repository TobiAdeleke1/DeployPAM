
services:
  db:
    image: postgis/postgis:16-3.5
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      default:
        aliases:
          - ${DB_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_USERNAME=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DEBUG=${DEBUG}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
  
  caddy:
    image: caddy:2.8
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./CaddyFile:/etc/caddy/Caddyfile:ro
      - ./frontend_dist:/srv/frontend:ro
      - caddy_data:/data
      - caddy_config:/config


volumes:
  postgres_data:
  candy_data:
  candy_config: